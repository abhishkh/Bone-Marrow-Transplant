/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Network.Network;
import Magic.Design.MyJButton;
import Magic.Design.MyTableFormat;
import java.awt.CardLayout;
import Magic.Design.*;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.KeyEvent;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sohamshah
 */
public class ManageNetworkJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();

    /**
     *
     * Creates new form ManageNetworkJPanel
     */
    public ManageNetworkJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.system = system;
        tblNetwork.getTableHeader().setDefaultRenderer(new MyTableFormat());
        populateNetworkTable();
    }

    private void populateNetworkTable() {
        DefaultTableModel model = (DefaultTableModel) tblNetwork.getModel();

        model.setRowCount(0);
        for (Network network : system.getNetworkList()) {
            Object[] row = new Object[3];
            row[0] = network.getName();
            row[1] = network.getState();
            row[2] = network.getCountry();
            model.addRow(row);
        }
    }
    
    public boolean isAlpha(String name) {
    return name.matches("[a-zA-Z]+");
        }
     

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblNetwork = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        lblState = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtState = new javax.swing.JTextField();
        lblCountry = new javax.swing.JLabel();
        txtCountry = new javax.swing.JTextField();
        btnCreateNetwork = new javax.swing.JButton();
        lblCreateNetwork = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        lblManageNetwork = new javax.swing.JLabel();
        btnDeleteNetwork = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 204));
        setMinimumSize(new java.awt.Dimension(1150, 670));
        setPreferredSize(new java.awt.Dimension(1150, 720));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N

        tblNetwork.setBackground(new java.awt.Color(153, 153, 153));
        tblNetwork.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 255, 204)));
        tblNetwork.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        tblNetwork.setForeground(new java.awt.Color(255, 255, 255));
        tblNetwork.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "State", "Country"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblNetwork.setFocusable(false);
        tblNetwork.setGridColor(new java.awt.Color(255, 255, 255));
        tblNetwork.setRowHeight(30);
        tblNetwork.setSelectionForeground(new java.awt.Color(204, 255, 204));
        jScrollPane1.setViewportView(tblNetwork);
        if (tblNetwork.getColumnModel().getColumnCount() > 0) {
            tblNetwork.getColumnModel().getColumn(0).setResizable(false);
            tblNetwork.getColumnModel().getColumn(1).setResizable(false);
            tblNetwork.getColumnModel().getColumn(2).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 110, 520, 270));

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));
        jPanel2.setPreferredSize(new java.awt.Dimension(250, 400));
        jPanel2.setRequestFocusEnabled(false);
        jPanel2.setVerifyInputWhenFocusTarget(false);
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblName.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblName.setText("Name:");
        jPanel2.add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 103, -1, -1));

        lblState.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblState.setText("State:");
        jPanel2.add(lblState, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 152, -1, -1));

        txtName.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });
        jPanel2.add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 100, 141, -1));

        txtState.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jPanel2.add(txtState, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 149, 141, -1));

        lblCountry.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblCountry.setText("Country:");
        jPanel2.add(lblCountry, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 200, -1, -1));

        txtCountry.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jPanel2.add(txtCountry, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 197, 141, -1));

        btnCreateNetwork.setBackground(new java.awt.Color(102, 102, 102));
        btnCreateNetwork.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnCreateNetwork.setForeground(new java.awt.Color(255, 255, 255));
        btnCreateNetwork.setText("Create Network");
        btnCreateNetwork.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateNetworkActionPerformed(evt);
            }
        });
        jPanel2.add(btnCreateNetwork, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 290, 130, 30));

        lblCreateNetwork.setFont(new java.awt.Font("Arial", 1, 22)); // NOI18N
        lblCreateNetwork.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCreateNetwork.setText("Create Network");
        jPanel2.add(lblCreateNetwork, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 326, 36));

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 380, 440));

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));
        jPanel3.setPreferredSize(new java.awt.Dimension(926, 70));

        lblManageNetwork.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblManageNetwork.setForeground(new java.awt.Color(255, 255, 255));
        lblManageNetwork.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblManageNetwork.setText("Manage Network");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(lblManageNetwork, javax.swing.GroupLayout.PREFERRED_SIZE, 1012, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 488, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblManageNetwork, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
        );

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1500, -1));

        btnDeleteNetwork.setBackground(new java.awt.Color(102, 102, 102));
        btnDeleteNetwork.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnDeleteNetwork.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteNetwork.setText("Delete Network");
        btnDeleteNetwork.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteNetworkActionPerformed(evt);
            }
        });
        add(btnDeleteNetwork, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 400, 130, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateNetworkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateNetworkActionPerformed

        if(txtName.getText().isEmpty())
        {
        txtName.setBorder(BorderFactory.createLineBorder(Color.RED));
        txtName.setForeground(Color.red);
        } 
        if(txtState.getText().isEmpty())
        {
        txtState.setBorder(BorderFactory.createLineBorder(Color.RED));
        txtState.setForeground(Color.red);
        } 
        if(txtCountry.getText().isEmpty())
        {
        txtCountry.setBorder(BorderFactory.createLineBorder(Color.RED));
        txtCountry.setForeground(Color.red);
        } 
        
        String check1 = "";
        
        if (txtName.getText().isEmpty() || txtState.getText().isEmpty() || txtCountry.getText().isEmpty() ){
            //JOptionPane.showMessageDialog(null, "All fields are mandatory!" , "Error", JOptionPane.ERROR_MESSAGE);
            JOptionPane.showMessageDialog(null,new JLabel(  "<html><b>All fields are mandatory!</b></html>") , "Error", JOptionPane.ERROR_MESSAGE);
            
            return;
        }
        else{
        for ( Network network :system.getNetworkList()){
        if( network.getName().equals(txtName.getText())) {
        JOptionPane.showMessageDialog(null, new JLabel("<html><b>Network Name can not be same!</b></html>") , "Error", JOptionPane.ERROR_MESSAGE);
                    
        //JOptionPane.showMessageDialog(null, "Network name cannot be same!" , "Error", JOptionPane.ERROR_MESSAGE);
        check1 = "no";
        return;       
        }}
        if(!isAlpha(txtState.getText()))
        {
              //JOptionPane.showMessageDialog(null, "State name must be all alphabets." , "Error", JOptionPane.ERROR_MESSAGE);
              check1 = "no";
              txtState.setBorder(BorderFactory.createLineBorder(Color.RED));
              txtState.setForeground(Color.red);
              
              JOptionPane.showMessageDialog(null, new JLabel("<html><b>Name of the State must contain only alphabets!</b></html>") , "Error", JOptionPane.ERROR_MESSAGE);
          
              
        }
           if(!isAlpha(txtCountry.getText()))
        {
              //JOptionPane.showMessageDialog(null, "Country name must be all alphabets." , "Error", JOptionPane.ERROR_MESSAGE);
              check1 = "no";
              txtCountry.setBorder(BorderFactory.createLineBorder(Color.RED));
              txtCountry.setForeground(Color.red);
              JOptionPane.showMessageDialog(null, new JLabel("<html><b>Name of the Country must contain only alphabets!</b></html>") , "Error", JOptionPane.ERROR_MESSAGE);
          
        }
        
        
        if( check1.equals("no")) 
        {}
        else
        {             
        Network network = system.createAndAddNetwork();
        network.setName(txtName.getText());
        network.setState(txtState.getText());
        network.setCountry(txtCountry.getText());
        populateNetworkTable();
        
        JOptionPane.showMessageDialog(null, 
                new JLabel("<html><b>"+ network.getName() + " Network Created!</b></html>"),
                "Approved",
                JOptionPane.INFORMATION_MESSAGE,
                new javax.swing.ImageIcon(getClass().getResource("/images/approved.png")));
        
        dB4OUtil.storeSystem(system);
        
        txtName.setText("");
        txtState.setText("");
        txtCountry.setText("");
        }  }
    }//GEN-LAST:event_btnCreateNetworkActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void btnDeleteNetworkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteNetworkActionPerformed
        int selectedRow = tblNetwork.getSelectedRow();
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(null, new JLabel("Select a network, to delete") , "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int input = JOptionPane.showConfirmDialog(null
                , "Are you sure, you want to delete", "Confirmation"
                ,JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.ERROR_MESSAGE);
        if (input == 0) {
            for ( Network network :system.getNetworkList()){
                if( network.getName().equals(tblNetwork.getValueAt(selectedRow,0))) {
                    String nName = network.getName();
                    system.getNetworkList().remove(network);
                    JOptionPane.showMessageDialog(null, new JLabel(nName + " network deleted Succesfully!!") , "Error", JOptionPane.ERROR_MESSAGE);
                    populateNetworkTable();
                    return;
                }
            }
        }
        else 
            return;
        JOptionPane.showMessageDialog(null, new JLabel("<html><b>Network Name can not be found!</b></html>") , "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_btnDeleteNetworkActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateNetwork;
    private javax.swing.JButton btnDeleteNetwork;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCountry;
    private javax.swing.JLabel lblCreateNetwork;
    private javax.swing.JLabel lblManageNetwork;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblState;
    private javax.swing.JTable tblNetwork;
    private javax.swing.JTextField txtCountry;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtState;
    // End of variables declaration//GEN-END:variables
}
