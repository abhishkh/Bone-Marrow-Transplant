/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AdministrativeRole;

import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Magic.Design.*;
import Business.Network.Network;
import Magic.Design.MyJLabel;
import Business.Organization.Organization;
import Business.Role.Role;
import Business.UserAccount.UserAccount;
import Magic.Design.MyJButton;
import Magic.Design.MyTableFormat;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *

 * @author abhishekmathukiya

 */
public class ManageUserAccountJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageUserAccountJPanel
     */
    private JPanel container;
    private Enterprise enterprise;
    private EcoSystem system;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    
    
    public ManageUserAccountJPanel(JPanel container, Enterprise enterprise, EcoSystem system) {
        initComponents();
        this.enterprise = enterprise;
        this.container = container;
        this.system = system;

        enterpriseNameTextField1.setText(enterprise.getName());
        popOrganizationComboBox();
        tblEmployee.getTableHeader().setDefaultRenderer(new MyTableFormat());
        popData();
    }

    public void popOrganizationComboBox() {
        cmbOrganization.removeAllItems();

        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            cmbOrganization.addItem(organization);
        }
    }
    
    public void populateEmployeeComboBox(Organization organization){
        cmbEmployee.removeAllItems();
        
        for (Employee employee : organization.getEmployeeDirectory().getEmployeeList()){
            cmbEmployee.addItem(employee);
        }
    }
    
    private void populateRoleComboBox(Organization organization){
        cmbRole.removeAllItems();
        for (Role role : organization.getSupportedRole()){
            cmbRole.addItem(role);
        }
    }

    public void popData() {

        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();

        model.setRowCount(0);

        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            for (UserAccount ua : organization.getUserAccountDirectory().getUserAccountList()) {
                Object row[] = new Object[3];
                row[0] = ua.getEmployee();
                row[1] = ua.getRole();
                row[2] = ua;
            //    row[2] = ua.getUsername();
                ((DefaultTableModel) tblEmployee.getModel()).addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jPanel3 = new javax.swing.JPanel();
        lblManageUsers = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblEmployeeCredentials = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        nameSeparator = new javax.swing.JSeparator();
        lblPassword = new javax.swing.JLabel();
        nameSeparator1 = new javax.swing.JSeparator();
        lblOrganization = new javax.swing.JLabel();
        cmbOrganization = new javax.swing.JComboBox();
        lblEmployee = new javax.swing.JLabel();
        cmbEmployee = new javax.swing.JComboBox();
        lblRole = new javax.swing.JLabel();
        cmbRole = new javax.swing.JComboBox();
        btnCreate = new javax.swing.JButton();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        lblEnterprise = new javax.swing.JLabel();
        nameSeparator4 = new javax.swing.JSeparator();
        enterpriseNameTextField1 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblEmployee = new javax.swing.JTable();

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setBackground(new java.awt.Color(255, 204, 204));
        setMinimumSize(new java.awt.Dimension(1000, 720));
        setPreferredSize(new java.awt.Dimension(1150, 720));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));
        jPanel3.setPreferredSize(new java.awt.Dimension(926, 70));

        lblManageUsers.setBackground(new java.awt.Color(102, 102, 102));
        lblManageUsers.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblManageUsers.setForeground(new java.awt.Color(255, 255, 255));
        lblManageUsers.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblManageUsers.setText("                                                          Manage Users");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblManageUsers, javax.swing.GroupLayout.DEFAULT_SIZE, 1818, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblManageUsers, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                .addContainerGap())
        );

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1830, -1));

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));
        jPanel2.setPreferredSize(new java.awt.Dimension(250, 400));
        jPanel2.setRequestFocusEnabled(false);
        jPanel2.setVerifyInputWhenFocusTarget(false);
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblEmployeeCredentials.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        lblEmployeeCredentials.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEmployeeCredentials.setText("Employee Credentials");
        jPanel2.add(lblEmployeeCredentials, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 468, 36));

        lblUsername.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblUsername.setText("Username");
        jPanel2.add(lblUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 10, 100, 21));

        nameSeparator.setForeground(new java.awt.Color(0, 0, 0));
        jPanel2.add(nameSeparator, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 70, 290, 10));

        lblPassword.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblPassword.setText("Password");
        jPanel2.add(lblPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 110, 100, 26));

        nameSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jPanel2.add(nameSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 190, 290, -1));

        lblOrganization.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblOrganization.setText("Organization");
        jPanel2.add(lblOrganization, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        cmbOrganization.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        cmbOrganization.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbOrganizationItemStateChanged(evt);
            }
        });
        cmbOrganization.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbOrganizationActionPerformed(evt);
            }
        });
        jPanel2.add(cmbOrganization, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 80, 280, -1));

        lblEmployee.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblEmployee.setText("Employee");
        jPanel2.add(lblEmployee, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, 30));

        cmbEmployee.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jPanel2.add(cmbEmployee, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 130, 280, -1));

        lblRole.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblRole.setText("Role");
        jPanel2.add(lblRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, 40));

        cmbRole.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jPanel2.add(cmbRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 180, 280, -1));

        btnCreate.setBackground(new java.awt.Color(153, 153, 153));
        btnCreate.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnCreate.setForeground(new java.awt.Color(255, 255, 255));
        btnCreate.setText("Create");
        btnCreate.setBorder(new javax.swing.border.MatteBorder(null));
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });
        jPanel2.add(btnCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 240, 130, 40));

        txtUsername.setBackground(new java.awt.Color(242, 242, 242));
        txtUsername.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        txtUsername.setBorder(null);
        jPanel2.add(txtUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 40, 290, 30));

        txtPassword.setBackground(new java.awt.Color(242, 242, 242));
        txtPassword.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        txtPassword.setBorder(null);
        jPanel2.add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 160, 290, 30));

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 1150, 320));

        lblEnterprise.setBackground(new java.awt.Color(0, 0, 0));
        lblEnterprise.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblEnterprise.setText("Enterprise:");
        add(lblEnterprise, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 510, -1, 30));

        nameSeparator4.setForeground(new java.awt.Color(0, 0, 0));
        add(nameSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 540, 230, 10));

        enterpriseNameTextField1.setEditable(false);
        enterpriseNameTextField1.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        enterpriseNameTextField1.setBorder(null);
        enterpriseNameTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterpriseNameTextField1ActionPerformed(evt);
            }
        });
        add(enterpriseNameTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 510, 230, 30));

        tblEmployee.setBackground(new java.awt.Color(153, 153, 153));
        tblEmployee.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 255, 204)));
        tblEmployee.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        tblEmployee.setForeground(new java.awt.Color(255, 255, 255));
        tblEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee", "Role", "User Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblEmployee.setFocusable(false);
        tblEmployee.setGridColor(new java.awt.Color(0, 0, 0));
        tblEmployee.setRowHeight(30);
        jScrollPane2.setViewportView(tblEmployee);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 630, 760, 150));
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
    
        
        if(cmbOrganization.getSelectedItem().equals(null))
        {cmbOrganization.setBorder(BorderFactory.createLineBorder(Color.RED));
            cmbOrganization.setForeground(Color.red);
            JOptionPane.showMessageDialog(null, "Please select an Organization");
        }
        
        else if(cmbEmployee.getSelectedItem().equals(null))
        {cmbEmployee.setBorder(BorderFactory.createLineBorder(Color.RED));
            cmbEmployee.setForeground(Color.red);
            JOptionPane.showMessageDialog(null, "Please select an Employee");
        }
          
         else if(cmbRole.getSelectedItem().equals(null))
        {cmbRole.setBorder(BorderFactory.createLineBorder(Color.RED));
            cmbRole.setForeground(Color.red);
            JOptionPane.showMessageDialog(null, "Please select a Role");
        }
           
        else if (txtUsername.getText().isEmpty()) {
             txtUsername.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtUsername.setForeground(Color.red);
            
            JOptionPane.showMessageDialog(null, new JLabel("<html><b>User Name can not be empty!</b></html>") , "Error", JOptionPane.ERROR_MESSAGE);
                   
            //JOptionPane.showMessageDialog(null, "Username cannot be empty");
            //return;
        }
        
         else if (txtPassword.getText().length() < 4 ){
            txtPassword.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtPassword.setForeground(Color.red);
            
            JOptionPane.showMessageDialog(null, new JLabel("<html><b> Password must be atleast 4 digits!</b></html>") , "Error", JOptionPane.ERROR_MESSAGE);
                   
            //JOptionPane.showMessageDialog(null, "Password should be more than 4 Digit");
            //return;
        
        }
         else if (!checkUserIdExists(txtUsername.getText())){
            
            JOptionPane.showMessageDialog(null, new JLabel("<html><b>User Name already present!</b></html>") , "Error", JOptionPane.ERROR_MESSAGE);
                   
             //JOptionPane.showMessageDialog(null, "UserName Already Present","Warning",JOptionPane.WARNING_MESSAGE);
            //return;
            }
         else{
        String userName = txtUsername.getText();
        String password = txtPassword.getText();
        Organization organization = (Organization) cmbOrganization.getSelectedItem();
        Employee employee = (Employee) cmbEmployee.getSelectedItem();
        Role role = (Role) cmbRole.getSelectedItem();
        
        organization.getUserAccountDirectory().createUserAccount(userName, password, employee, role);
        
        popData();
        
        JOptionPane.showMessageDialog(null, new JLabel("<html><b>User Account created successfully!</b></html>") );//, "Error", JOptionPane.ERROR_MESSAGE);
                   
        //JOptionPane.showMessageDialog(null, "User account for " + userName + " created Successfully");

         dB4OUtil.storeSystem(system);
        
        
        txtUsername.setText("");
        txtPassword.setText("");
      //  organizationJComboBox.removeItem(organizationJComboBox.getSelectedItem());
       //  employeeJComboBox.removeItem(employeeJComboBox.getSelectedItem());
       //  if(employeeJComboBox.getSelectedItem()== null){
         //    organizationJComboBox.removeItem(organizationJComboBox.getSelectedItem());
        // }
      //  roleJComboBox.removeItem(roleJComboBox.getSelectedItem());
         }
        
    }//GEN-LAST:event_btnCreateActionPerformed
private boolean checkUserIdExists(String userName) {
        if (system.getUserAccountDirectory().checkIfUsernameIsUnique(userName)) {
            if (system.getUserAccountDirectory().checkIfUsernameIsUnique(userName)) {
                for (Network network : system.getNetworkList()) {
                    for (Enterprise enterprise : network.getEnterprise_Directory().getEnterpriseList()) {
                        if (enterprise.getUserAccountDirectory().checkIfUsernameIsUnique(userName)) {
                            if (enterprise.getOrganizationDirectory().getOrganizationList().size() > 0) {
                                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                                    if (organization.getUserAccountDirectory().checkIfUsernameIsUnique(userName)) {
                                        return true;

                                    } else {
                                        return false;
                                    }

                                }
                            } else {
                                return true;
                            }
                        } else {
                            return false;

                        }
                    }
                }
            } else {
                return false;
            }
        } else {
            return false;
        }
        return false;
    }
    private void cmbOrganizationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbOrganizationActionPerformed
        Organization organization = (Organization) cmbOrganization.getSelectedItem();
        if (organization != null){
            populateEmployeeComboBox(organization);
            populateRoleComboBox(organization);
        }
    }//GEN-LAST:event_cmbOrganizationActionPerformed

    private void cmbOrganizationItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbOrganizationItemStateChanged
        // TODO add your handling code here:
        
        Organization organization = (Organization) cmbOrganization.getSelectedItem();
        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();

        model.setRowCount(0);

        
        for (UserAccount ua : organization.getUserAccountDirectory().getUserAccountList()) {
                Object row[] = new Object[3];
                row[0] = ua.getEmployee();
                row[1] = ua.getRole();
                row[2] = ua;
            //    row[2] = ua.getUsername();
                ((DefaultTableModel) tblEmployee.getModel()).addRow(row);
            }
    }//GEN-LAST:event_cmbOrganizationItemStateChanged

    private void enterpriseNameTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterpriseNameTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enterpriseNameTextField1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JComboBox cmbEmployee;
    private javax.swing.JComboBox cmbOrganization;
    private javax.swing.JComboBox cmbRole;
    private javax.swing.JTextField enterpriseNameTextField1;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblEmployee;
    private javax.swing.JLabel lblEmployeeCredentials;
    private javax.swing.JLabel lblEnterprise;
    private javax.swing.JLabel lblManageUsers;
    private javax.swing.JLabel lblOrganization;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblRole;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JSeparator nameSeparator;
    private javax.swing.JSeparator nameSeparator1;
    private javax.swing.JSeparator nameSeparator4;
    private javax.swing.JTable tblEmployee;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
